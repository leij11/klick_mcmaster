{"version":3,"sources":["components/ConversationList/pp.JPG","components/Toolbar/index.js","components/ToolbarButton/index.js","components/Message/index.js","components/MessageList/index.js","components/ConversationSearch/index.js","components/ConversationListItem/index.js","components/Messenger/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Toolbar","props","title","leftItems","rightItems","react_default","a","createElement","className","ToolbarButton","icon","size","id","concat","Message","data","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","moment","timestamp","format","join","onDoubleClick","msg","message","pinCallback","MY_USER_ID","MessageList","_useState","useState","_useState2","Object","slicedToArray","messages","setMessages","useEffect","getMessages","tempMessages","author","Date","getTime","toConsumableArray","src","current","photo","name","d","clear","i","messageCount","length","previous","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","Message_Message","key","renderMessages","ToolbarButton_ToolbarButton","type","placeholder","onKeyDown","event","target","value","chatHistory","ConversationSearch","ConversationListItem","shave","_props$data","text","alt","ConversationList","idn","desc","conversations","setConversations","_useState3","_useState4","currentcon","setConversations2","getConversations","getConversations2","axios","get","then","response","newConversations","results","map","result","picture","large","first","last","sendData","convos","itemCallback","conversation","onClick","ConversationListItem_ConversationListItem","ChatListItem","Messenger","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pinnedCallback","setState","pinnedMsg","state","chatHistoryCallback","clearData","callbackFunction","chatData","n","newPerson","chats","currentNote","notes","recentChats","pinned","showModal","selectedId","groupName","selectedUsers","test","groups","showGroup","descN","dropdown","status","dropdown2","newSelectedUsers","num","user","find","newtest","newNotes","_this2","pp","style","display","ConversationSearch_ConversationSearch","bind","toUpperCase","MessageList_MessageList","Toolbar_Toolbar","e","onChange","changeNotes","class","addSelected","React","Component","App","components_Messenger","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.684a5a96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp.614e3975.JPG\";","import React from 'react';\r\nimport './Toolbar.css';\r\n\r\nexport default function Toolbar(props) {\r\n    const { title, leftItems, rightItems } = props;\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"left-items\">{ leftItems }</div>\r\n        <h1 className=\"toolbar-title\">{ title }</h1>\r\n        <div className=\"right-items\">{ rightItems }</div>\r\n      </div>\r\n    );\r\n}","import React from 'react';\r\nimport './ToolbarButton.css';\r\n\r\nexport default function ToolbarButton(props) {\r\n    const { icon, size } = props;\r\n    return (\r\n      <i id={size} className={`toolbar-button ${icon}`} />\r\n    );\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport './Message.css';\r\n\r\nexport default function Message(props) {\r\n    const {\r\n      data,\r\n      isMine,\r\n      startsSequence,\r\n      endsSequence,\r\n      showTimestamp\r\n    } = props;\r\n\r\n    var pinMessages = (msg) => {\r\n      props.pinCallback(msg)\r\n    }\r\n\r\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\r\n    return (\r\n      <div className={[\r\n        'message',\r\n        `${isMine ? 'mine' : ''}`,\r\n        `${startsSequence ? 'start' : ''}`,\r\n        `${endsSequence ? 'end' : ''}`\r\n      ].join(' ')} >\r\n        {\r\n          showTimestamp &&\r\n            <div className=\"timestamp\">\r\n              { friendlyTimestamp }\r\n            </div>\r\n        }\r\n\r\n        <div className=\"bubble-container\" onDoubleClick={() => pinMessages(data.message)}>\r\n          <div className=\"bubble\" title={friendlyTimestamp}>\r\n            { data.message }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Compose from '../Compose';\r\nimport Toolbar from '../Toolbar';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\n\r\nimport './MessageList.css';\r\n\r\nconst MY_USER_ID = 'apple';\r\n\r\nexport default function MessageList(props) {\r\n  var [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    getMessages();\r\n  }, [])\r\n\r\n  const getMessages = () => {\r\n    var tempMessages = [\r\n      {\r\n        id: 1,\r\n        author: 'apple',\r\n        message: 'Hello world! This is a long message',\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 2,\r\n        author: 'orange',\r\n        message: 'Lets see what a reply looks like!',\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 3,\r\n        author: 'orange',\r\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 4,\r\n        author: 'apple',\r\n        message: 'Line 200:  Expected === and instead saw ==',\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 5,\r\n        author: 'apple',\r\n        message: 'get wrapped by our message bubble component! We will see how well it works.',\r\n        timestamp: new Date().getTime()\r\n      },\r\n    ]\r\n    setMessages([...messages, ...tempMessages])\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.author === MY_USER_ID;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n        prevBySameAuthor = previous.author === current.author;\r\n\r\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as('hours') < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n          pinCallback={props.pinCallback}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n  const addMessages = (msg) => {\r\n    if(props.clear) {\r\n      messages = []\r\n    }\r\n    setMessages([...messages, {\r\n      id: 1,\r\n      author: 'apple',\r\n      message: msg,\r\n      timestamp: new Date().getTime()\r\n    }])\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      <div>\r\n\r\n        <div id=\"Title\">\r\n            <img id=\"smallpp\" src={props.current.photo} />\r\n            <div className=\"name-box\">\r\n              <h1>{props.current.name}</h1>\r\n              <div id=\"desc\">{props.current.d}</div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {props.clear ? <div className=\"message-list-container\"></div> : <div className=\"message-list-container\">{renderMessages()}</div> }\r\n      <div className=\"compose\">\r\n        <div className=\"tool-container\">\r\n          {\r\n            [\r\n              <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" size=\"small\" />,\r\n              <ToolbarButton key=\"image\" icon=\"ion-ios-image\" size=\"small\" />,\r\n              <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" size=\"small\" />,\r\n              <ToolbarButton key=\"money\" icon=\"ion-ios-card\" size=\"small\" />,\r\n              <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" size=\"small\" />,\r\n              <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" size=\"small\" />\r\n            ]\r\n          }\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"compose-input\"\r\n          placeholder=\"Type a message\"\r\n          onKeyDown={event => { if (event.key === \"Enter\") { addMessages(event.target.value); event.target.value = \"\"; props.chatHistory()} }}\r\n        \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './ConversationSearch.css';\r\n\r\nexport default function ConversationSearch() {\r\n    return (\r\n      <div className=\"conversation-search\">\r\n        <input\r\n          type=\"search\"\r\n          className=\"conversation-search-input\"\r\n          placeholder=\"Search Messages\"\r\n        />\r\n      </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport shave from 'shave';\r\n\r\nimport './ConversationListItem.css';\r\n\r\nexport default function ConversationListItem(props) {\r\n  useEffect(() => {\r\n    shave('.conversation-snippet1', 20);\r\n  })\r\n\r\n  const { photo, name, text, id, d } = props.data;\r\n\r\n  return (\r\n    <div>\r\n      {id == 1 ? <div className=\"conversation-list-item1\">\r\n        <img className=\"conversation-photo\" src={photo} alt=\"conversation\" />\r\n        <div className=\"conversation-info\">\r\n          <h1 className=\"conversation-title\">{name}</h1>\r\n          <p className=\"conversation-snippet1\">{text}</p>\r\n        </div>\r\n      </div> : <div className=\"conversation-list-item1\">\r\n          <img className=\"conversation-photo\" src={photo} alt=\"conversation\" />\r\n          <div className=\"conversation-info\">\r\n            <h1 className=\"conversation-title\">{name}</h1>\r\n            <p className=\"conversation-snippet1\">{text}</p>\r\n          </div>\r\n        </div>}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}","import MessageList from '../MessageList';\r\nimport './Messenger.css';\r\nimport chatpp from '../ConversationList/pp.JPG'\r\nimport Toolbar from '../Toolbar';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport pp from '../ConversationList/pp.JPG';\r\nimport ConversationSearch from '../ConversationSearch';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { Modal, Button, ThemeProvider } from 'react-bootstrap';\r\n\r\n\r\nfunction ConversationList(props) {\r\n  var idn = 0;\r\n  const desc = [\"Material Eng - year 1\", \"General Physics tutor\", \"Soft Eng - year 3\", \"General Math tutor\", \"Part time student\", \"Civil Eng - year 2\", \"General Science tutor\", \"Business student\", \"Soft Eng - year 3\", \"General Math tutor\", \"Part time student\"]\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentcon, setConversations2] = useState([]);\r\n  useEffect(() => {\r\n    getConversations()\r\n    getConversations2()\r\n  }, [])\r\n\r\n  const getConversations = () => {\r\n    axios.get('https://randomuser.me/api/?results=8').then(response => {\r\n      let newConversations = response.data.results.map(result => {\r\n        idn += 1;\r\n        return {\r\n          photo: result.picture.large,\r\n          name: `${result.name.first} ${result.name.last}`,\r\n          text: 'Hello nice to meet you! This is a long message that needs to be truncated.',\r\n          id: idn,\r\n          d: desc[idn]\r\n        };\r\n      });\r\n      setConversations([...conversations, ...newConversations])\r\n    });\r\n  }\r\n\r\n  const getConversations2 = () => {\r\n    idn += 1;\r\n    axios.get('https://randomuser.me/api/?results=2').then(response => {\r\n      let newConversations = response.data.results.map(result => {\r\n        return {\r\n          photo: result.picture.large,\r\n          name: `${result.name.first} ${result.name.last}`,\r\n          text: 'Hello nice to meet you! This is a long message that needs to be truncated.',\r\n          id: idn,\r\n          d: desc[idn]\r\n        };\r\n      });\r\n      setConversations2([...currentcon, ...newConversations])\r\n    });\r\n  }\r\n\r\n  const sendData = (name, photo, id, convos, d) => {\r\n    var value = currentcon;\r\n    props.itemCallback(value, name, photo, id, convos, d);\r\n  }\r\n\r\n  return (\r\n    <div className=\"conversation-list\">\r\n      <div className=\"notes\">\r\n        <div className=\"right-title\">RECENT CHATS</div>\r\n        {\r\n          currentcon.map(conversation =>\r\n            <div onClick={() => { sendData(conversation.name, conversation.photo, conversation.id, conversations, conversation.d) }}>\r\n              <ConversationListItem\r\n                key={conversation.name}\r\n                data={conversation}\r\n\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n      <div className=\"notes\">\r\n        <div className=\"right-title\">TUTORS</div>\r\n        {\r\n          conversations.map(conversation =>\r\n            <div onClick={() => { sendData(conversation.name, conversation.photo, conversation.id, conversations, conversation.d) }}>\r\n              <ConversationListItem\r\n                key={conversation.name}\r\n                data={conversation}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatListItem(props) {\r\n  const { photo, name, id } = props.data;\r\n  const sendData = () => {\r\n    props.itemCallback(props.data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-list-item\" >\r\n      <img className=\"chat-list-photo\" src={photo} alt=\"conversation\" />\r\n      <div className=\"conversation-info\">\r\n        <h1 className=\"chat-title\">{name}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Messenger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recentChats: [1, 2], chats: null, notes: [\"111\", \"222\"], pinned: [], current: \"\",\r\n      currentNote: \"\", showModal: false, conversations: null, selectedId: [], groupName: \"GROUP1\",\r\n      selectedUsers: [], test: \"\", groups: [], showGroup: false,\r\n      descN: 0, dropdown: false, clearData: false, pinnedMsg: [], status: \"ONLINE\", dropdown2: false\r\n    }\r\n\r\n  }\r\n\r\n  pinnedCallback = (msg) => {\r\n    this.setState({\r\n      pinnedMsg: [...this.state.pinnedMsg, msg]\r\n    })\r\n  }\r\n\r\n  addSelected(data) {\r\n    // const { photo, name, text, id } = data;\r\n    var newSelectedUsers = [];\r\n    var num = this.state.selectedUsers.length;\r\n    var user = this.state.selectedUsers.find(user => data.id == user.id)\r\n    var newtest = \"\";\r\n    if (user == null) {\r\n      newSelectedUsers = [...this.state.selectedUsers, { name: data.name, photo: data.photo, id: data.id, text: data.text }]\r\n\r\n    } else {\r\n      for (var i = 0; i < num; i++) {\r\n        if (user.id != this.state.selectedUsers[i].id) {\r\n          newtest += (\"user\" + i)\r\n          newSelectedUsers = [...newSelectedUsers,\r\n          {\r\n            name: this.state.selectedUsers[i].name,\r\n            id: this.state.selectedUsers[i].id, photo: this.state.selectedUsers[i].photo,\r\n            text: this.state.selectedUsers[i].text\r\n          }]\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      selectedUsers: newSelectedUsers,\r\n      test: newtest,\r\n      groups: newSelectedUsers\r\n    })\r\n  }\r\n\r\n  chatHistoryCallback = () => {\r\n    this.setState({\r\n      clearData: false\r\n    })\r\n  }\r\n\r\n  callbackFunction = (chatData, n, p, i, convos, desc) => {\r\n    var newPerson = { name: n, photo: p, id: i, d: desc };\r\n    this.setState({\r\n      chats: chatData,\r\n      current: newPerson,\r\n      currentNote: this.state.notes[newPerson.id - 1],\r\n      conversations: convos\r\n    })\r\n  };\r\n\r\n  changeNotes(notes) {\r\n    var newNotes = this.state.notes;\r\n    newNotes[this.state.current.id - 1] = notes;\r\n    this.setState({\r\n      notes: newNotes\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const activities = [\"Participated in a voting session\", \"Shared a post from MscTutor\"];\r\n\r\n    return (\r\n      <div className=\"messenger\">\r\n\r\n        <div className=\"scrollable sidebar\">\r\n          <div className=\"upper-box\">\r\n            <div className=\"profile-container\">\r\n              <img id=\"photo\" src={pp} alt=\"profile\" />\r\n              <div className=\"buttons\">\r\n                <div className=\"status-pp\" onClick=\"\">{this.state.status}</div>\r\n                <div className=\"menu-buttons\" onClick={() => this.setState({ showModal: true })}><ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" /></div>\r\n\r\n                <div className=\"menu-buttons\" onClick={() => this.setState({ dropdown2: !this.state.dropdown2 })} >\r\n                  <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\r\n                  <div className=\"dropdown-box\" style={{ display: this.state.dropdown2 ? \"block\" : \"none\" }}>\r\n                    <div className=\"dropdown-item\" onClick={() => this.setState({ status: \"ONLINE\" })}>ONLINE</div>\r\n                    <div className=\"dropdown-item\" onClick={() => this.setState({ status: \"BUSY\" })}>BUSY</div>\r\n                    <div className=\"dropdown-item\" onClick={() => this.setState({ status: \"OFFLINE\" })}>OFFLINE</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ConversationSearch />\r\n          </div>\r\n          <ConversationList itemCallback={this.callbackFunction.bind(this)} />\r\n          {this.state.showGroup ?\r\n            <div className=\"notes\">\r\n              <div className=\"right-title\">{this.state.groupName.toUpperCase()}</div>\r\n              {this.state.groups.map(conversation =>\r\n                <ConversationListItem\r\n                  key={conversation.name}\r\n                  data={conversation} />\r\n              )}\r\n            </div>\r\n            : null}\r\n        </div>\r\n        {this.state.current == \"\" ?\r\n          <div className=\"content-blank\">\r\n            Start A Conversation Now With A Tutor\r\n          </div>\r\n\r\n          :\r\n          <div className=\"scrollable content\">\r\n            <MessageList pinCallback={this.pinnedCallback.bind(this)} current={this.state.current} clear={this.state.clearData} chatHistory={this.chatHistoryCallback.bind(this)} />\r\n          </div>\r\n        }\r\n\r\n\r\n        {this.state.current == \"\" ? null : <div className=\"right-component\">\r\n          <div className=\"chat-profile\">\r\n            <img id=\"chatpp\" src={this.state.current.photo} alt=\"chat profile\" />\r\n            <p className=\"chatname\" >{this.state.current.name}</p>\r\n            <div className=\"right-tool\" >\r\n              <Toolbar\r\n                rightItems={[\r\n                  <div onClick={() => this.setState({ dropdown: !this.state.dropdown })} ><ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />\r\n\r\n                    <div className=\"dropdown-box\" style={{ display: this.state.dropdown ? \"block\" : \"none\" }}>\r\n                      <div className=\"dropdown-item\" onClick={() => this.setState({ clearData: true })}>clear chat history</div>\r\n                      <div className=\"dropdown-item\">export chat history</div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                  ,\r\n                  <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\r\n                  <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n                ]}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"extratool-box\">\r\n            <div className=\"status\">\r\n              <div className=\"right-title\">RECENT ACTIVITY</div>\r\n              <div className=\"list\">\r\n                <ul>\r\n                  {activities.map(e =>\r\n                    <li>{e}</li>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"notes\">\r\n              <div className=\"right-title\">NOTES</div>\r\n              <div>\r\n                <textarea onChange={(event) => this.changeNotes.bind(this, event.target.name)} ></textarea>\r\n              </div>\r\n            </div>\r\n            <div className=\"pin\">\r\n              <div className=\"right-title\">PINNED</div>\r\n            </div>\r\n            <div className=\"pin-container\">\r\n              {this.state.pinnedMsg.map(msg => <div className=\"buble-container\">{msg}</div>)}\r\n            </div>\r\n          </div>\r\n\r\n        </div>}\r\n        {this.state.showModal ? <div id=\"myModal\" class=\"modal\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <span class=\"close\" onClick={() => this.setState({ showModal: false, groupName: \"GROUP1\", selectedUsers: [], test: \"\" })}>&times;</span>\r\n              <h2>Create a group</h2>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <p>Group Name:</p>\r\n              <input placeholder=\"GROUP1\" type=\"text\" onChange={(event) => this.setState({ groupName: event.target.value })}></input>\r\n              <p>Description:</p>\r\n              <input type=\"text\"></input>\r\n            </div>\r\n            <div className=\"group-list\">\r\n              <p>\r\n                Select member for the group:\r\n              </p>\r\n              <div className=\"selected-box\">\r\n                {this.state.selectedUsers.map(user => <div className=\"list-names\">{user.name} </div>)}\r\n              </div>\r\n              <div className=\"selection-box\">\r\n                {this.state.conversations.map(conversation =>\r\n                  <div className=\"chat-list-item\" onClick={this.addSelected.bind(this, conversation)}>\r\n                    <ChatListItem\r\n                      key={conversation.name}\r\n                      data={conversation}\r\n                    /></div>\r\n\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button onClick={() => { this.setState({ showModal: false, groupName: \"GROUP1\", selectedUsers: [], test: \"\", showGroup: true }) }}>Create</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Messenger;","import React from 'react';\r\nimport Messenger from '../Messenger';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Messenger />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root-chat'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}